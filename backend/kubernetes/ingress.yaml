apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: evento-ingress
  namespace: evento
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-websocket: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://evento-booking.vercel.app"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  rules:
  - host: a6e33a2c39c3f4dde9b422a60c740f1e-6b4e549281c893bf.elb.us-east-1.amazonaws.com
    http:
      paths:
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: api-gateway
            port:
              number: 5000
      - path: /user(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: user-service
            port:
              number: 80
      - path: /company(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: company-service
            port:
              number: 80
      - path: /booking(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: booking-service
            port:
              number: 80
      - path: /chat(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: chat-service
            port:
              number: 80